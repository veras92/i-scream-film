{"mappings":"AAAO,MAAMA,EAAO,CAClBC,KAAMC,SAASC,cAAc,mBAC7BC,KAAMF,SAASC,cAAc,eAC7BE,OAAQH,SAASC,cAAc,cAC/BG,gBAAiBJ,SAASC,cAAc,eACxCI,OAAQL,SAASC,cAAc,WAC/BK,QAASN,SAASC,cAAc,iBAChCM,MAAOP,SAASC,cAAc,YAC9BO,OAAQR,SAASC,cAAc,gBCNlB,IAAIQ,sBAInB,SAAkBC,GAChBA,EAAQC,SAAQC,IACVA,EAAMC,eACRf,EAAKS,MAAMO,UAAUC,OAAO,mBAE5BjB,EAAKS,MAAMO,UAAUE,IAAI,kBAAkB,G,IAPxCC,QAAQnB,EAAKU","sources":["src/js/refs.js","src/js/scroll-up-button.js"],"sourcesContent":["export const refs = {\n  form: document.querySelector('.js-search-form'),\n  list: document.querySelector('.js-gallery'),\n  loader: document.querySelector('.js-loader'),\n  paginationBlock: document.querySelector('#pagination'),\n  header: document.querySelector('.header'),\n  errText: document.querySelector('.header__text'),\n  upBtn: document.querySelector('.up-link'),\n  footer: document.querySelector('.heart-icon'),\n};\n","import { refs } from './refs';\n\nlet observer = new IntersectionObserver(callback);\n\nobserver.observe(refs.footer);\n\nfunction callback(entries) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      refs.upBtn.classList.remove('visually-hidden');\n    } else {\n      refs.upBtn.classList.add('visually-hidden');\n    }\n  });\n}\n"],"names":["$ee27a4d7c64fc8c4$export$21666b427502ea6d","form","document","querySelector","list","loader","paginationBlock","header","errText","upBtn","footer","IntersectionObserver","entries","forEach","entry","isIntersecting","classList","remove","add","observe"],"version":3,"file":"library.4e618caf.js.map"}